import { SourceRange } from '@scaffdog/types';

declare class ExtensibleError extends Error {
    constructor(name: string, message?: string);
}

declare class ScaffdogAggregateError extends ExtensibleError {
    private _errors;
    constructor(errors: unknown[], message?: string);
    get errors(): unknown[];
}

type ScaffdogErrorOptions = {
    source: string | null;
    range: SourceRange | null;
};
type ScaffdogErrorFormatOptions = {
    color: boolean;
};
declare class ScaffdogError extends ExtensibleError {
    private _options;
    constructor(message: string, options?: Partial<ScaffdogErrorOptions>);
    format(options?: Partial<ScaffdogErrorFormatOptions>): string;
}

declare const error: (message: string, options?: Partial<ScaffdogErrorOptions>) => ScaffdogError;

export { ScaffdogAggregateError, ScaffdogError, ScaffdogErrorOptions, error };
